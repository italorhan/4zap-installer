#!/bin/bash
#Alterando Cores do SHELL
tput init

SOURCE="${BASH_SOURCE[0]}"

#Estrutura de repetição até que $SOURCE não seja mais um link simbólico
while [ -h "$SOURCE" ]; do 
  PROJECT_ROOT="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$PROJECT_ROOT/$SOURCE"
done
PROJECT_ROOT="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"

#Importação dos arquivos necessários
source "${PROJECT_ROOT}"/variables/manifest.sh
source "${PROJECT_ROOT}"/utils/manifest.sh
source "${PROJECT_ROOT}"/lib/manifest.sh

#Arquivo de confoguração do usuário
if [[ ! -e "${PROJECT_ROOT}"/config ]]; then
  cat << EOF > "${PROJECT_ROOT}"/config
deploy_password=${deploy_password}
mysql_root_password=${mysql_root_password}
db_pass=${db_pass}
EOF
fi

#Permissionando diretório /config
sudo su - root <<EOF
chown root:root "${PROJECT_ROOT}"/config
chmod 700 "${PROJECT_ROOT}"/config
EOF
source "${PROJECT_ROOT}"/config

#Interação na CLI
inquiry_options

#Dependências relacionadas
system_update
system_node_install
system_pm2_install
system_docker_install
system_puppeteer_dependencies
system_snapd_install
system_nginx_install
system_certbot_install

#Configurações do sistema
system_create_user

#Backend relacionado
system_git_clone
backend_set_env
backend_mysql_create
backend_node_dependencies
backend_node_build
backend_db_migrate
backend_db_seed
backend_start_pm2
backend_nginx_setup

#Frontend relacionado
frontend_set_env
frontend_node_dependencies
frontend_node_build
frontend_start_pm2
frontend_nginx_setup

#Serviço HTTP e HTTPS relacionado
system_nginx_conf
system_nginx_restart
system_certbot_setup